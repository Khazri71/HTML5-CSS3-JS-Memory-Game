--NOTES--
--------------------------------------------------------------------------------------
--> Css3 Property : pointer-events : none; : To Stop Event Of Click <--
--------------------------------------------------------------------------------------
--> Function filter <--
const ages = [32, 33, 16, 40];
1/const result = ages.filter(checkAdult);
function checkAdult(age) {
  return age >= 18;
}
2/const result = ages.filter((age , index)=>{
   return age >=18;
});
==result==[32 , 33 , 40]
--------------------------------------------------------------------------------------
--> Custum Attribute <--
    HTML5 : JS
    data- : dataset 
    anime : .anime
    data-anime : dataset.anime or dataset['anime]
    For example, a data-abc-def attribute corresponds to dataset.abcDef.
--------------------------------------------------------------------------------------
--> Function   arr.push(ele)  : Add Element To an Array arr <-- 
--------------------------------------------------------------------------------------
--> Audio In HTML5
<audio controls preload="none">
  <source src="horse.ogg" type="audio/ogg">
  <source src="horse.mp3" type="audio/mpeg">
  Your browser does not support the audio element.
</audio>
<---
--> Audio In Js
x : audio / video
var x = document.getElementById("myX");
function playX() {
    x.play(); //Method In JsTo Play audio or video
}
function pauseX() {
    x.pause(); //Method In Js To Stop audio or video
}
<--
--------------------------------------------------------------------------------------
--> Swap Variables in ES6
let a = 1;
let b= 2;
[a , b] = [b , a];
console.log(a);   a = 2
console.log(a);   b = 1
<--
--------------------------------------------------------------------------------------
--> Interval
let timerInter = setInterval(() => {...},1000);
clearInterval(timerInter);
<--
--------------------------------------------------------------------------------------
--> Sweet Alert : It is a Js Librery Of Alerts : Website == https://sweetalert2.github.io/
1/CDN Sweet Alert:
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

2/Usage in Js File:
*/Usage : Show 
Swal.fire({
  title: "Good!",
  text: "Lorem Ipsum",
  icon: "success",
  confirmButtonText: "Ok",
  showCancelButton: true,
  showCloseButton: true,
});
*/Usage : Write Input
Swal.fire({
  title: "An input!",
  text: "Write something interesting:",
  input: "text",
  showCancelButton: true,
  showCloseButton: true,
}).then((result) => {
  if (result.value) {
    console.log("Result: " + result.value);
  }
});
<--
--------------------------------------------------------------------------------------


--ROADMAP--
1- Create The Template With HTML5 and CSS3
2- The Logic With JS:
  --1- Create Function To  Start The Game Write The Name of Player
  --2- Create Function To Restart - Refresh The Game
  --3- Create Function To Flip Cards One By One When Click Card
  --4- Create Function To :
      *Add Class flipped To Every Clicked Card 
      *When Two Cards Are Flipped : Call Function Stop Click and Check The Two Cards
  --5- Create Function Stop Click - Choose  Cards To Add and Remove Class No Click
  --6- Create Function Check The Two Choosen Cards Are Same Or Different
  --7- Create Function Timer Count Down
  --8- Create Function To Make Random Numbers 
  --9- Create Function To Order The Cards Randomly Every Reload
  --10- Create Function Lose Game And Call It : If Number Of Tries More Than 15 Tries
  --11- Create Function Win Game And Call It : If All Cards Have Class Done
  --12- Put 4 Audios : 
  Audio 1 : If You Add Player Name And Start Game : Background Sound
  Audio 2 : If Cards Different
  Audio 3 : If Cards Same
  Audio 4 : If You Lose Game
  Audio 5 : If You Win Game
  